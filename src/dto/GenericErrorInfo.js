/**
 * レンタル予約システムの公開API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GenericErrorInfo model module.
 * @module dto/GenericErrorInfo
 * @version 0.0.1-SNAPSHOT
 */
class GenericErrorInfo {
    /**
     * Constructs a new <code>GenericErrorInfo</code>.
     * エラー情報
     * @alias module:dto/GenericErrorInfo
     */
    constructor() { 
        
        GenericErrorInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GenericErrorInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:dto/GenericErrorInfo} obj Optional instance to populate.
     * @return {module:dto/GenericErrorInfo} The populated <code>GenericErrorInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GenericErrorInfo();

            if (data.hasOwnProperty('errorMessage')) {
                obj['errorMessage'] = ApiClient.convertToType(data['errorMessage'], 'String');
            }
            if (data.hasOwnProperty('errorReason')) {
                obj['errorReason'] = ApiClient.convertToType(data['errorReason'], 'String');
            }
        }
        return obj;
    }


}

/**
 * 発生した例外に設定されていたメッセージ
 * @member {String} errorMessage
 */
GenericErrorInfo.prototype['errorMessage'] = undefined;

/**
 * エラー理由として発生した例外のクラス名を設定
 * @member {String} errorReason
 */
GenericErrorInfo.prototype['errorReason'] = undefined;






export default GenericErrorInfo;

